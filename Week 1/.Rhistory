filter(flights, !(arr_delay > 120 | dep_delay > 120))
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
flights
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
flights_short <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
View(flights_short)
mutate(flights_short,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60)
gtwd
getwd
getwd()
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
die <- 1:6
die
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
ls()
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
die <- 1:6
die
ls()
rm(list = ls())
a <- 1
die <- 1:6
die + 1
die * die
die %o% die
die %*% die
rm(list = ls())
rm(list = ls())
die <- c(1, 2, 3, 4, 5, 6)
die
is.vector(die)
text <- c("32", "Olympic", "Games")
text
1 + 1 > 2
names(die)
names(die) <- c("one", "two", "three", "four", "five", "six")
names(die)
die
names(die) <- c("one", "two")
names(die)
die
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
die <- 1:6
die
ls()
rm(list = ls())
a <- 1
die <- 1:6
die + 1
die * die
die %o% die
die %*% die
rm(list = ls())
die <- c(1, 2, 3, 4, 5, 6)
die
is.vector(die)
text <- c("32", "Olympic", "Games")
text
1 + 1 > 2
names(die)
names(die) <- c("one", "two", "three", "four", "five", "six")
names(die)
die
die + 1
m <- matrix(die, nrow = 2)
m
m <- matrix(die, nrow = 2, byrow = TRUE)
m
View(m)
list1 <- list(die, m, text)
list1 <- list(die, m, text)
list
list1 <- list(die, m, text)
list1
View(list1)
list2 <- list(die, m, 33, "Tokyo")
View(list2)
list3 <- list(die, m, "33", "Tokyo")
View(list3)
df <- data.frame(face = c("ace", "two", "six"),
suit = c("clubs", "clubs", "clubs"),
value = c(1, 2, 6))
df
View(df)
df2 <- data.frame(Name = c("Bolt", "Powell", "Gatlin"),
Record = c(9.58, 9.72, 9.74),
Nationality = c("Jamaican", "Jamaican", "American"))
df2
View(df2)
read.csv("deck.csv")
deck <- read.csv("deck.csv")
View(deck)
write.csv(deck, file = "cards.csv", row.names = FALSE)
getwd
getwd()
deck[1, 1]
deck[1, ]
deck[1, ]
deck[1, c("face", "suit", "value")]
deck[1, c(1:3)]
deck[1, c(1:2)]
deck[1, -3]
deck[-1, ]
deal <- function(x){
x[1, ]
}
deal(deck)
deck[c(2, 1, 3:52), ]
random <- sample(1:52, size = 52)
random
deck[random, ]
deck[c(random), ]
shuffle <- function(x){
random <- sample(1:52, size = 52)
x[random, ]
}
deck2 <- shuffle(deck)
deck2
deal(deck2)
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
View(deck)
View(deck2)
deck$face
mean(deck$value)
View(list1)
names(list1) <- c("Die", "Matrix", "Text")
names(list1) <- c("Die", "Matrix", "Text")
list1$Matrix
die[1, ]
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
die <- 1:6
die
ls()
rm(list = ls())
a <- 1
die <- 1:6
die + 1
die * die
die %o% die
die %*% die
rm(list = ls())
die <- c(1, 2, 3, 4, 5, 6)
die
is.vector(die)
text <- c("32", "Olympic", "Games")
text
1 + 1 > 2
names(die)
names(die) <- c("one", "two", "three", "four", "five", "six")
names(die)
die
die + 1
m <- matrix(die, nrow = 2)
m
m <- matrix(die, nrow = 2, byrow = TRUE)
m
list1 <- list(die, m, text)
list1
df <- data.frame(face = c("ace", "two", "six"),
suit = c("clubs", "clubs", "clubs"),
value = c(1, 2, 6))
df
df2 <- data.frame(Name = c("Bolt", "Powell", "Gatlin"),
Record = c(9.58, 9.72, 9.74),
Nationality = c("Jamaican", "Jamaican", "American"))
df2
read.csv("deck.csv")
deck <- read.csv("deck.csv")
write.csv(deck, file = "cards.csv", row.names = FALSE)
deck[1, 1]
deck[1, ]
deck[1, c("face", "suit", "value")]
deck[1, c(1:3)]
deck[1, c(1:2)]
deck[1, -3]
deck[-1, ]
deal <- function(x){
x[1, ]
}
deal(deck)
deck[c(2, 1, 3:52), ]
random <- sample(1:52, size = 52)
random
deck[random, ]
shuffle <- function(x){
random <- sample(1:52, size = 52)
x[random, ]
}
deck2 <- shuffle(deck)
deck2
deal(deck2)
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deck$face
mean(deck$value)
names(list1) <- c("Die", "Matrix", "Text")
list1$Matrix
die[1, ]
die[1]
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
die <- 1:6
die
ls()
rm(list = ls())
a <- 1
die <- 1:6
die+1
die * die
die %o% die
die %*% die
rm(list = ls())
die <- c(1, 2, 3, 4, 5, 6)
die
is.vector(die)
text <- c("32", "Olympic", "Games")
text
1+1>2
names(die)
names(die) <- c("one", "two", "three", "four", "five", "six")
names(die)
die
die+1
m <- matrix(die, nrow = 2)
m
m <- matrix(die, nrow = 2, byrow = TRUE)
m
list1 <- list(die, m, text)
list1
df <- data.frame(face = c("ace", "two", "six"),
suit = c("clubs", "clubs", "clubs"), value = c(1, 2, 6))
df
df2 <- data.frame(Name = c("Bolt", "Powell", "Gatlin"),
Record = c(9.58, 9.72, 9.74),
Nationality = c("Jamaican", "Jamaican", "American"))
df2
read.csv("deck.csv")
deck <- read.csv("deck.csv")
write.csv(deck, file = "cards.csv", row.names = FALSE)
deck[1, 1]
deck[1, ]
deck[1, c(1:3)]
deck[1, c("face", "suit", "value")]
deck[1, c(1:2)]
deck[1, c(1, 3)]
deck[1, c(1:2)]
deck[1, -3]
deck[-1, ]
deal <- function(x){
x[1, ]
}
deal(deck)
deck[c(2, 1, 3:52), ]
random <- sample(1:52, size = 52)
random
deck[random, ]
shuffle <- function(x){
random <- sample(1:52, size = 52)
x[random, ]
}
deck2 <- shuffle(deck)
deck2
deal(deck2)
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deck$face
mean(deck$value)
names(list1) <- c("One", "Two", "Three")
list1$One
die[1] <- 1000
die
die[c(1, 3, 5)] <- c(1000, 3000, 5000)
die
die[c(2, 4, 6)] <- die[c(2, 4, 6)] + 1
die
die[7] <- 0
die
deck2$newvar <- c(1)
head(deck2)
deck2$newvar <- NULL
head(deck2)
deck$value[c(13, 26, 39, 52)]
deck$value[c(13, 26, 39, 52)] <- c(14, 14, 14, 14)
deck$value[c(13, 26, 39, 52)]
deck2$value[deck2$face == "ace"] <- 14
deck2[deck2$face == "ace", ]
random2 <- sample(1:52, size = 5)
random2
deck2$value[c(random2)] <- c(NA, NA, NA, NA, NA)
deck2
is.na(deck2)
deck3 <- na.omit(deck2)
is.na(deck3)
dim(deck3)
library(tidyverse)
library(nycflights13)
nycflights13::flights
filter(flights, month == 1, day == 1)
jan1 <- filter(flights, month == 1, day == 1)
filter(flights, month == 11 | month == 12)
filter(flights, arr_delay <= 120, dep_delay <= 120)
filter(flights, !(arr_delay > 120 | dep_delay > 120))
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
flights_short <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
mutate(flights_short,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60)
by_day <- group_by(flights, year, month, day)
View(by_day)
by_day <- group_by(flights, day)
View(by_day)
by_day <- group_by(flights, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
View(delay)
by_day <- group_by(flights, year, month, day)
summarise(by_day, count = n(), delay = mean(dep_delay, na.rm = TRUE))
daily <- ungroup(summarise(flights = n()))
summarise(ungroup(by_day))
ungroup(by_day)
View(flights_short)
View(flights_short)
flights_short <- group_by(flights_short, year, month, day)
flights_short <- filter(flights_short, rank(desc(arr_delay)) < 10)
View(flights_short)
flights_short <- group_by(flights_short, year, month, day)
flights_short <- filter(flights_short, rank(desc(arr_delay)) <= 10)
knitr::opts_chunk$set(echo = TRUE)
a <- 1
a
a+1
die <- 1:6
die
ls()
rm(list = ls())
a <- 1
die <- 1:6
die+1
die * die
die %o% die
die %*% die
rm(list = ls())
die <- c(1, 2, 3, 4, 5, 6)
die
is.vector(die)
text <- c("32", "Olympic", "Games")
text
1+1>2
names(die)
names(die) <- c("one", "two", "three", "four", "five", "six")
names(die)
die
die+1
m <- matrix(die, nrow = 2)
m
m <- matrix(die, nrow = 2, byrow = TRUE)
m
list1 <- list(die, m, text)
list1
df <- data.frame(face = c("ace", "two", "six"),
suit = c("clubs", "clubs", "clubs"), value = c(1, 2, 6))
df
df2 <- data.frame(Name = c("Bolt", "Powell", "Gatlin"),
Record = c(9.58, 9.72, 9.74),
Nationality = c("Jamaican", "Jamaican", "American"))
df2
read.csv("deck.csv")
deck <- read.csv("deck.csv")
write.csv(deck, file = "cards.csv", row.names = FALSE)
deck[1, 1]
deck[1, ]
deck[1, c(1:3)]
deck[1, c("face", "suit", "value")]
deck[1, c(1:2)]
deck[1, c(1, 3)]
deck[1, c(1:2)]
deck[1, -3]
deck[-1, ]
deal <- function(x){
x[1, ]
}
deal(deck)
deck[c(2, 1, 3:52), ]
random <- sample(1:52, size = 52)
random
deck[random, ]
shuffle <- function(x){
random <- sample(1:52, size = 52)
x[random, ]
}
deck2 <- shuffle(deck)
deck2
deal(deck2)
deal(shuffle(deck))
deal(shuffle(deck))
deal(shuffle(deck))
deck$face
mean(deck$value)
names(list1) <- c("One", "Two", "Three")
list1$One
die[1] <- 1000
die
die[c(1, 3, 5)] <- c(1000, 3000, 5000)
die
die[c(2, 4, 6)] <- die[c(2, 4, 6)] + 1
die
die[7] <- 0
die
deck2$newvar <- c(1)
head(deck2)
deck2$newvar <- NULL
head(deck2)
deck$value[c(13, 26, 39, 52)]
deck$value[c(13, 26, 39, 52)] <- c(14, 14, 14, 14)
deck$value[c(13, 26, 39, 52)]
deck2$value[deck2$face == "ace"] <- 14
deck2[deck2$face == "ace", ]
random2 <- sample(1:52, size = 5)
random2
deck2$value[c(random2)] <- c(NA, NA, NA, NA, NA)
deck2
is.na(deck2)
deck3 <- na.omit(deck2)
is.na(deck3)
dim(deck3)
library(tidyverse)
library(nycflights13)
nycflights13::flights
filter(flights, month == 1, day == 1)
jan1 <- filter(flights, month == 1, day == 1)
filter(flights, month == 11 | month == 12)
filter(flights, arr_delay <= 120, dep_delay <= 120)
filter(flights, !(arr_delay > 120 | dep_delay > 120))
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
flights_short <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
mutate(flights_short,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60)
by_day <- group_by(flights, year, month, day)
summarise(by_day, count = n(), delay = mean(dep_delay, na.rm = TRUE))
ungroup(by_day)
flights_short <- group_by(flights_short, year, month, day)
flights_short <- filter(flights_short, rank(desc(arr_delay)) <= 10)
View(flights_short)
popular_dest <- filter(group_by(flights, dest), n() > 365)
View(popular_dest)
