reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ s + expr + tenure + rns + smsa + year + med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = HC)
reg5 <- lm(iq ~ s + expr + tenure + rns + smsa + year + med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
View(default)
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
View(train)
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
set.seed(1)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of Default")
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg8 <- glm(default ~ . - prob, family = binomial, data = train)
names(default)
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg9 <- glm(default ~ student, family = binomial, data = train)
reg10 <- glm(default ~ income, family = binomial, data = train)
summary(reg9)
summary(reg10)
test7 <- predict(reg7, newdata = test, type = "response")
test9 <- predict(reg9, newdata = test, type = "response")
test10 <- predict(reg10, newdata = test, type = "response")
model1 <- table(test$default, test7 > 0.5)
model1 <- table(test$default, test7 > 0.5)
model1 <- prop.table()
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
list(model1)
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
model2 <- round(prop.table(table(test$default, test9 > 0.5)), 3)
model3 <- round(prop.table(table(test$default, test10 > 0.5)), 3)
list(mode1, model2, model3)
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
model2 <- round(prop.table(table(test$default, test9 > 0.5)), 3)
model3 <- round(prop.table(table(test$default, test10 > 0.5)), 3)
list(model1, model2, model3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = ~ origin_year)
summary(reg1)
griliches <- read_dta("griliches.dta")
griliches$year <- as.factor(griliches$year)
reg3 <- lm(lw ~ s + expr + tenure + rns + smsa + year + iq, data = griliches)
summary(reg3)
coeftest(reg3, vcov = vcovHC)
reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
set.seed(1)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg9 <- glm(default ~ student, family = binomial, data = train)
reg10 <- glm(default ~ income, family = binomial, data = train)
summary(reg9)
summary(reg10)
test7 <- predict(reg7, newdata = test, type = "response")
test9 <- predict(reg9, newdata = test, type = "response")
test10 <- predict(reg10, newdata = test, type = "response")
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
model2 <- round(prop.table(table(test$default, test9 > 0.5)), 3)
model3 <- round(prop.table(table(test$default, test10 > 0.5)), 3)
list(model1, model2, model3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = ~ origin_year)
summary(reg1)
griliches <- read_dta("griliches.dta")
griliches$year <- as.factor(griliches$year)
reg3 <- lm(lw ~ s + expr + tenure + rns + smsa + year + iq, data = griliches)
summary(reg3)
coeftest(reg3, vcov = vcovHC)
reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg9 <- glm(default ~ student, family = binomial, data = train)
reg10 <- glm(default ~ income, family = binomial, data = train)
summary(reg9)
summary(reg10)
test7 <- predict(reg7, newdata = test, type = "response")
test9 <- predict(reg9, newdata = test, type = "response")
test10 <- predict(reg10, newdata = test, type = "response")
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
model2 <- round(prop.table(table(test$default, test9 > 0.5)), 3)
model3 <- round(prop.table(table(test$default, test10 > 0.5)), 3)
list(model1, model2, model3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = ~ origin_year)
summary(reg1)
griliches <- read_dta("griliches.dta")
griliches$year <- as.factor(griliches$year)
reg3 <- lm(lw ~ s + expr + tenure + rns + smsa + year + iq, data = griliches)
summary(reg3)
coeftest(reg3, vcov = vcovHC)
reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg9 <- glm(default ~ student, family = binomial, data = train)
reg10 <- glm(default ~ income, family = binomial, data = train)
summary(reg9)
summary(reg10)
test7 <- predict(reg7, newdata = test, type = "response")
test9 <- predict(reg9, newdata = test, type = "response")
test10 <- predict(reg10, newdata = test, type = "response")
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
model2 <- round(prop.table(table(test$default, test9 > 0.5)), 3)
model3 <- round(prop.table(table(test$default, test10 > 0.5)), 3)
list(model1, model2, model3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = ~ origin_year)
summary(reg1)
griliches <- read_dta("griliches.dta")
griliches$year <- as.factor(griliches$year)
reg3 <- lm(lw ~ s + expr + tenure + rns + smsa + year + iq, data = griliches)
summary(reg3)
coeftest(reg3, vcov = vcovHC)
reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
set.seed(1)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = T, prob = c(0.6,0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg9 <- glm(default ~ student, family = binomial, data = train)
reg10 <- glm(default ~ ., family = binomial, data = train)
summary(reg9)
summary(reg10)
test7 <- predict(reg7, newdata = test, type = "response")
test9 <- predict(reg9, newdata = test, type = "response")
test10 <- predict(reg10, newdata = test, type = "response")
model1 <- round(prop.table(table(test$default, test7 > 0.5)), 3)
model2 <- round(prop.table(table(test$default, test9 > 0.5)), 3)
model3 <- round(prop.table(table(test$default, test10 > 0.5)), 3)
list(model1, model2, model3)
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
plot(x = reg1)
plot(x = reg1, which = 2)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
View(auto1)
length(unique(auto1$year))
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
View(auto2)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = origin_year)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = origin_year)
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = ~ origin_year)
coeftest(reg1, vcov = vcovHC)
griliches <- read_dta("griliches.dta")
View(griliches)
griliches$year <- as.factor(griliches$year)
reg3 <- lm(lw ~ s + expr +tenure + rns + smsa +year + iq, data = griliches)
summary(reg3)
coeftest(reg3, vcov = vcovHC)
reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
View(default)
set.seed(1)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = TRUE, prob = c(0.6, 0.4))
set.seed(1)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = TRUE, prob = c(0.6, 0.4))
train <- default[sample, ]
test <- default[!sample, ]
View(test)
View(train)
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg7 <- glm(default ~ student, family = binomial, data = train)
summary(reg6)
summary(reg7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastDummies)
library(ISLR)
library(car) ## Install the "car" package if you haven't already
library(lmtest) ## Install the "car" package if you haven't already
library(sandwich) ## Install the "car" package if you haven't already
library(haven) ## Install the "car" package if you haven't already
library(AER) ## Install the "car" package if you haven't already
auto1 <- Auto
auto1$origin <- as.factor(auto1$origin)
reg1 <- lm(mpg ~ . - name, data = auto1)
summary(reg1)
plot(x = reg1, which = 3)
ncvTest(reg1)
coeftest(reg1, vcov = vcovHC)
summary(reg1)
dwtest(reg1)
auto2 <- mutate(Auto, origin_year = origin*year)
auto2$origin <- as.factor(auto2$origin)
length(unique(auto2$origin_year))
reg2 <- lm(mpg ~ . - name - origin_year, data = auto2)
coeftest(reg2, vcov = vcovCL, cluster = ~ origin_year)
coeftest(reg1, vcov = vcovHC)
griliches <- read_dta("griliches.dta")
griliches$year <- as.factor(griliches$year)
reg3 <- lm(lw ~ s + expr + tenure + rns + smsa + year + iq, data = griliches)
summary(reg3)
coeftest(reg3, vcov = vcovHC)
reg4 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + age + kww, data = griliches)
summary(reg4)
coeftest(reg4, vcov = vcovHC)
reg5 <- lm(iq ~ med + mrt + age + kww, data = griliches)
coeftest(reg5, vcov = vcovHC)
reg6 <- ivreg(lw ~ s + expr + tenure + rns + smsa + year + iq | s + expr + tenure + rns + smsa + year
+ med + mrt + kww, data = griliches)
summary(reg6)
coeftest(reg6, vcov = vcovHC)
default <- as_tibble(ISLR::Default)
set.seed(1)
sample <- sample(c(TRUE, FALSE), nrow(default), replace = TRUE, prob = c(0.6, 0.4))
train <- default[sample, ]
test <- default[!sample, ]
reg7 <- glm(default ~ balance, family = binomial, data = train)
summary(reg7)
default <- mutate(default, prob = ifelse(default == "Yes", 1, 0))
ggplot(default, aes(balance, prob)) +
geom_point(alpha = .15) +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
ggtitle("Logistic regression model fit") +
xlab("Balance") +
ylab("Probability of default")
reg8 <- glm(default ~ ., family = binomial, data = train)
summary(reg8)
reg9 <- glm(default ~ student, family = binomial, data = train)
reg9 <- glm(default ~ student, family = binomial, data = train)
summary(reg9)
test1 <- predict(reg7, newdata = test, type = "response")
test2 <- predict(reg9, newdata = test, type = "response")
test3 <- predict(reg8, newdata = test, type = "response")
table(test$default, test1 > 0.5)
model1 <- prop.table(table(test$default, test1 > 0.5))
model2 <- prop.table(table(test$default, test2 > 0.5))
model2 <- prop.table(table(test$default, test3 > 0.5))
list(model1, model2, model3)
model1 <- prop.table(table(test$default, test1 > 0.5))
model2 <- prop.table(table(test$default, test2 > 0.5))
model3 <- prop.table(table(test$default, test3 > 0.5))
list(model1, model2, model3)
