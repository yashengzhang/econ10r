set.seed(1)
sims1 <- replicate(10000, expr = rnorm(20, mean = 5, sd = 1))
View(list1)
set.seed(1)
sims1_mean <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
set.seed(1)
sims1_mean <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
head(sims1_mean)
ggplot(sims1_mean, aes(x = sims1_mean))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ggplot(sims1_mean, aes(x = sims1_mean))
hist(sims1_mean)
hist(sims1_mean,
x = "Simulated Sample Mean")
hist(sims1_mean,
xlab = "Simulated Sample Mean")
hist(sims1_mean,
title = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
hist(sims1_mean,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
hist(sims1_mean,
freq = FALSE,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
hist(sims1_mean,
freq = FALSE,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
line(density(sims1_mean))
hist(sims1_mean,
freq = FALSE,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
line(density(sims1_mean), col = 2)
hist(sims1_mean,
probability = TRUE
freq = FALSE,
hist(sims1_mean,
prob = TRUE
freq = FALSE,
density(sims1_mean)
hist(sims1_mean,
freq = FALSE,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
line(density(sims1_mean))
hist(sims1_mean,
freq = FALSE,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
line(density(sims1_mean), col = "black")
hist(sims1_mean,
freq = FALSE,
main = "Sampling Distribution of Sample Means", xlab = "Simulated Sample Mean")
lines(density(sims1_mean), col = "black")
set.seed(1)
sims1_mean_df <- data.frame()
set.seed(1)
sims1_mean_df <- data.frame()
for (i in 1:10000) {
sims1_mean_df$mean[[i]] <- mean(rnorm(20, mean = 5, sd = 1)))
set.seed(1)
sims1_mean_df <- data.frame()
for (i in 1:10000) {
sims1_mean_df$mean[[i]] <- mean(rnorm(20, mean = 5, sd = 1)
}
set.seed(1)
sims1_mean_df <- data.frame()
for (i in 1:10000) {
sims1_mean_df$mean[[i]] <- mean(rnorm(20, mean = 5, sd = 1))
}
mean(rnorm(20, mean = 5, sd = 1)
mean(rnorm(20, mean = 5, sd = 1)
mean(rnorm(20, mean = 5, sd = 1))
View(sims1_mean_df)
set.seed(1)
sims1_mean_df <- data.frame(c("mean"))
for (i in 1:10000) {
sims1_mean_df$mean[[i]] <- mean(rnorm(20, mean = 5, sd = 1))
}
View(sims1_mean_df)
set.seed(1)
sims1_mean_df <- data.frame()
for (i in 1:10000) {
sims1_mean_df$mean[[i]] <- mean(rnorm(20, mean = 5, sd = 1))
}
View(sims1_mean_df)
set.seed(1)
sims1_mean_df <- data.frame()[1:10000, ]
for (i in 1:10000) {
sims1_mean_df$mean[[i]] <- mean(rnorm(20, mean = 5, sd = 1))
}
View(sims1_mean_df)
set.seed(1)
sims1_mean_df <- data.frame()
list1 <- list()
for (i in 1:10000) {
list1[[i]] <- rnorm(20, mean = 5, sd = 1)
sims1_mean_df$mean[[i]] <- mean(list1[[i]])
}
set.seed(1)
sims1_var <- replicate(10000, expr = var(rnorm(20, mean = 5, sd = 1)))
head(sims1_var)
hist(sims1_var,
freq = FALSE,
main = "Sampling Distribution of Sample Variance", xlab = "Simulated Sample Variance")
lines(density(sims1_var), col = "black")
set.seed(1)
sims1_max <- replicate(10000, expr = max(rnorm(20, mean = 5, sd = 1)))
hist(sims1_max,
freq = FALSE,
main = "Sampling Distribution of Sample Maximum", xlab = "Simulated Sample Maximum")
lines(density(sims1_max), col = "black")
mean(rnorm(20, mean = 5, sd = 1))
mean(rnorm(50, mean = 5, sd = 1))
mean(rnorm(100, mean = 5, sd = 1))
mean(rnorm(1000, mean = 5, sd = 1))
mean(rnorm(10000, mean = 5, sd = 1))
set.seed(1)
mean(rnorm(20, mean = 5, sd = 1)) - 5
mean(rnorm(50, mean = 5, sd = 1)) - 5
mean(rnorm(100, mean = 5, sd = 1)) - 5
mean(rnorm(1000, mean = 5, sd = 1)) - 5
mean(rnorm(10000, mean = 5, sd = 1)) - 5
set.seed(1)
abs(mean(rnorm(20, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(50, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(100, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(1000, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(10000, mean = 5, sd = 1)) - 5)
set.seed(1)
abs(mean(rnorm(20, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(50, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(100, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(1000, mean = 5, sd = 1)) - 5)
abs(mean(rnorm(10000, mean = 5, sd = 1)) - 5)
We can clearly see that as the number of observation increases, the mean absolute deviation shrinks. This shows LLN at works - as we gather more data, the sample mean gets closer and closer to the true mean!
View(sims1)
sims1[sims1$V1 < 5]
set.seed(1)
sims_5 <- replicate(10000, expr = max(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = max(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = max(rnorm(1000, mean = 5, sd = 1)))
set.seed(1)
sims_5 <- replicate(10000, expr = max(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = max(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = max(rnorm(1000, mean = 5, sd = 1)))
lines(density(sims_5), col = "grey")
plot(density(sims_5), col = "grey")
plot(density(sims_5), col = "grey")
plot(density(sims_20), col = "black")
plot(density(sims_1000), col = "blue")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sm)
install.packages(sm)
install.packages("sm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("sm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sm)
install.packages("sm")
library(sm)
set.seed(1)
sims_5 <- replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = mean(rnorm(1000, mean = 5, sd = 1)))
sims1_mean_df <- c(sims_5, sims_20, sims_1000)
sims1_mean_df[, 3] <- c(sims_5, sims_20, sims_1000)
set.seed(1)
sims_5 <- replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = mean(rnorm(1000, mean = 5, sd = 1)))
sims1_mean_df[, 3] <- c(sims_5, sims_20, sims_1000)
sims1_mean_df[10000, 3] <- c(sims_5, sims_20, sims_1000)
set.seed(1)
sims_5 <- replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = mean(rnorm(1000, mean = 5, sd = 1)))
sims1_mean_df <- data.frame(sims_5, sims_20, sims_1000)
View(sims1_mean_df)
ggplot(data=sims1_mean_df, aes(x = sims_5)) +
geom_density(adjust=1.5, alpha=.4) +
theme_ipsum()
ggplot(data=sims1_mean_df, aes(x = sims_5)) +
geom_density(adjust=1.5, alpha=.4)
ggplot(data = sims1_mean_df, aes(x = sims_5)) +
ggplot(data = sims1_mean_df, aes(x = sims_20)) +
geom_density(adjust=1.5, alpha=.4)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
set.seed(1)
sims_5 <- replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = mean(rnorm(1000, mean = 5, sd = 1)))
plot(density(sims_5), col = "grey")
lines(density(sims_20), col = "black")
lines(density(sims_1000), col = "blue")
set.seed(1)
sims_5 <- replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
sims_1000 <- replicate(10000, expr = mean(rnorm(1000, mean = 5, sd = 1)))
plot(density(sims_1000), col = "grey")
lines(density(sims_20), col = "black")
lines(density(sims_5), col = "blue")
set.seed(1)
sims_5 <- replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1)))
sims_20 <- replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1)))
sims_100 <- replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1)))
plot(density(sims_100), col = "grey")
lines(density(sims_20), col = "black")
lines(density(sims_5), col = "blue")
set.seed(1)
sims_mean_df <- data.frame(replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
View(sims_mean_df)
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density)
View(sims_mean_df_den)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, dens, col=1:length(sims_mean_df_den))
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density, na.rm = TRUE)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, dens, col=1:length(sims_mean_df_den))
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density, na.rm = TRUE)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, sims_mean_df_den, col=1:length(sims_mean_df_den))
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density, na.rm = TRUE)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
legend("topright", legend = names(sims_mean_df_den), fill = 1:length(sims_mean_df_den))
set.seed(1000)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density, na.rm = TRUE)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
legend("topright", legend = names(sims_mean_df_den), fill = 1:length(sims_mean_df_den))
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density, na.rm = TRUE)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
legend("topright", legend = names(sims_mean_df_den), fill = 1:length(sims_mean_df_den))
die <- 1:6
names(die[1]) <- c("one")
names(die)
die[1]
names(die[1])
names(die[1]) <- c("one")
names(die[1])
names(die) <- c("one", "two", "three", "four", "five", "six")
names(die)
rm(die)
die <- 1:6
names(die[1])
names(die[1]) <- ("one")
names(die[1])
assign(die[1}, "one"])
assign(die[1], "one")
names(die)
attr(die)
attr(die, name)
attr(die, names)
attributes(die)
die[1]
length(names(die[1]))
length(die)
length(die[1])
names(die[1]) <- "one"
names(die)
names(die)[1] <- "one"
names(die)
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density)
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
legend("topright", legend = names(sims_mean_df_den), fill = 1:length(sims_mean_df_den))
View(sims_mean_df_den)
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density)
names(sims_mean_df_den) <- c("Sims with n=5", "Sims with n=20", "Sims with n=100")
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")))
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
legend("topright", legend = names(sims_mean_df_den), fill = 1:length(sims_mean_df_den))
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density)
names(sims_mean_df_den) <- c("Sims with n=5", "Sims with n=20", "Sims with n=100")
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")), xlab("Sample Mean"), ylab("Density"))
set.seed(1)
sims_mean_df <- data.frame(sims_5 = replicate(10000, expr = mean(rnorm(5, mean = 5, sd = 1))),
sims_20 = replicate(10000, expr = mean(rnorm(20, mean = 5, sd = 1))),
sims_100 = replicate(10000, expr = mean(rnorm(100, mean = 5, sd = 1))))
sims_mean_df_den <- apply(sims_mean_df, 2, density)
names(sims_mean_df_den) <- c("Sims with n=5", "Sims with n=20", "Sims with n=100")
plot(NA, xlim=range(sapply(sims_mean_df_den, "[", "x")), ylim=range(sapply(sims_mean_df_den, "[", "y")), xlab = "Sample Mean", ylab = "Density")
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
legend("topright", legend = names(sims_mean_df_den), fill = 1:length(sims_mean_df_den))
set.seed(1)
abs(var(sims_mean_df$sims_5)/n)
set.seed(1)
abs(var(sims_mean_df$sims_5)\n)
set.seed(1)
abs(var(sims_mean_df$sims_5) / n)
set.seed(1)
abs(var(sims_mean_df$sims_5))
set.seed(1)
abs((var(sims_mean_df$sims_5)/5) - 1/5)
set.seed(1)
abs((var(sims_mean_df$sims_5)/5) - 1/5)
abs((var(sims_mean_df$sims_20)/20) - 1/20)
abs((var(sims_mean_df$sims_100)/100) - 1/100)
library(nycflights13)
flights <- na.omit(flights)
View(flights)
set.seed(1)
random_20 <- function(x){
x <- sample(1:length(flights), 20)
}
random_20(flights$dep_delay)
set.seed(1)
random_20 <- function(x){
x <- sample(1:length(flights), 20, replace = TRUE)
}
random_20(flights$dep_delay)
sample(1:length(flights), 20, replace = TRUE)
sample(1:length(flights), 20, replace = TRUE)
sample(1:length(flights), 20, replace = TRUE)
sample(1:length(flights), 20, replace = TRUE)
sample(1:length(flights), 20, replace = TRUE)
length(flights)
length(flights)
length(flights$dep_delay)
sample(1:length(flights$dep_delay), 20)
set.seed(1)
sample(1:length(flights$dep_delay), 20)
sample(1:length(flights$dep_delay), 20)
sample(1:length(flights$dep_delay), 20)
sample(1:length(flights$dep_delay), 20)
set.seed(1)
sample(1:length(flights$dep_delay), 20)
set.seed(1)
sample(1:length(flights$dep_delay), 20)
set.seed(1)
sample(1:length(flights$dep_delay), 20)
set.seed(1)
sample(1:length(flights$dep_delay), 20)
set.seed(1)
sample(1:length(flights$dep_delay), 20)
flights$dep_delay[sample]
flights$dep_delay[random_100]
sample(1:length(flights$dep_delay), 20)
random_100 <- function(x){
x <- sample(1:length(flights$dep_delay), 100)
}
random_1000 <- function(x){
x <- sample(1:length(flights$dep_delay), 1000)
}
random_10000 <- function(x){
x <- sample(1:length(flights$dep_delay), 10000)
}
flights_mean_df <- data.frame(mean_100 = replicate(10000, expr = mean(flights$dep_delay[sample])))
random_100 <- function(x){
x <- sample(1:length(flights$dep_delay), 100)
}
mean(flights$dep_delay[sample])
mean(flights$dep_delay[random_100()])
random_100()
random_100(flights$dep_delay)
random_100 <- function(x){
random <- sample(1:length(flights$dep_delay), 100)
x[random]
}
random_1000 <- function(x){
random <- sample(1:length(flights$dep_delay), 1000)
x[random]
}
random_10000 <- function(x){
random <- sample(1:length(flights$dep_delay), 10000)
x[random]
}
random_100(flights$dep_delay)
random_100(flights$dep_delay)
random_100 <- function(x){
random <- sample(1:length(flights$dep_delay), 100)
x[random]
}
random_1000 <- function(x){
random <- sample(1:length(flights$dep_delay), 1000)
x[random]
}
random_10000 <- function(x){
random <- sample(1:length(flights$dep_delay), 10000)
x[random]
}
flights_mean_df <- data.frame(mean_100 = replicate(10000, expr = mean(random_100(flights$dep_delay))),
mean_1000 = replicate(10000, expr = mean(random_1000(flights$dep_delay))),
mean_10000 = replicate(10000, expr = mean(random_10000(flights$dep_delay))),)
random_100 <- function(x){
random <- sample(1:length(flights$dep_delay), 100)
x[random]
}
random_1000 <- function(x){
random <- sample(1:length(flights$dep_delay), 1000)
x[random]
}
random_10000 <- function(x){
random <- sample(1:length(flights$dep_delay), 10000)
x[random]
}
flights_mean_df <- data.frame(mean_100 = replicate(10000, expr = mean(random_100(flights$dep_delay))),
mean_1000 = replicate(10000, expr = mean(random_1000(flights$dep_delay))),
mean_10000 = replicate(10000, expr = mean(random_10000(flights$dep_delay))))
flights_mean_df_den <- apply(flights_mean_df, 2, density)
names(sims_mean_df_den) <- c("Sample with n=100", "Sample with n=1000", "Sample with n=10000")
plot(NA, xlim=range(sapply(flights_mean_df_den, "[", "x")), ylim=range(sapply(flights_mean_df_den, "[", "y")), xlab = "Dep", ylab = "Density")
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
View(sims_mean_df_den)
View(flights_mean_df_den)
View(flights_mean_df)
hist(flights_mean_df$mean_10000)
hist(flights_mean_df$mean_1000)
hist(flights_mean_df$mean_100)
random_100 <- function(x){
random <- sample(1:length(flights$dep_delay), 100)
x[random]
}
random_1000 <- function(x){
random <- sample(1:length(flights$dep_delay), 1000)
x[random]
}
random_10000 <- function(x){
random <- sample(1:length(flights$dep_delay), 10000)
x[random]
}
flights_mean_df <- data.frame(mean_100 = replicate(10000, expr = mean(random_100(flights$dep_delay))),
mean_1000 = replicate(10000, expr = mean(random_1000(flights$dep_delay))),
mean_10000 = replicate(10000, expr = mean(random_10000(flights$dep_delay))))
flights_mean_df_den <- apply(flights_mean_df, 2, density)
names(sims_mean_df_den) <- c("Sample with n=100", "Sample with n=1000", "Sample with n=10000")
plot(NA, xlim=range(sapply(flights_mean_df_den, "[", "x")), ylim=range(sapply(flights_mean_df_den, "[", "y")), xlab = "Dep", ylab = "Density")
mapply(lines, sims_mean_df_den, col = 1:length(sims_mean_df_den))
plot(flights_mean_df$mean_100, density)
plot(density(flights_mean_df$mean_100))
names(flights_mean_df_den)
mean(flights$dep_delay)
hist(flights$dep_delay)
hist(density(flights$dep_delay))
plot(density(flights$dep_delay))
hist(flights$dep_time)
lines(density(flights$dep_delay))
hist(flights$dep_delay)
lines(density(flights$dep_delay))
hist(flights$dep_delay)
plot(density(flights$dep_delay))
hist(flights$dep_delay, title = "Histogram of Departure Delay")
hist(flights$dep_delay, title = "Histogram of Departure Delay")
hist(flights$dep_delay, freq = FALSE,
main = "Histogram of Departure Delay",
xlab = "Departure Delay",
ylab = "Density")
lines(density(flights$dep_delay), col = "black")
hist(flights$dep_delay, freq = FALSE,
main = "Histogram of Departure Delay",
xlab = "Departure Delay")
lines(density(flights$dep_delay), col = "black")
hist(flights$dep_delay, freq = FALSE,
main = "Histogram of Departure Delay",
xlab = "Departure Delay",
ylim = NULL)
lines(density(flights$dep_delay), col = "black")
hist(flights$dep_delay, freq = FALSE,
main = "Histogram of Departure Delay",
xlab = "Departure Delay",
ylim = [0, 0.1])
hist(flights$dep_delay, freq = FALSE,
main = "Histogram of Departure Delay",
xlab = "Departure Delay",
ylim = c(0, 0.1))
lines(density(flights$dep_delay), col = "black")
hist(flights$dep_delay, freq = FALSE,
main = "Histogram of Departure Delay",
xlab = "Departure Delay")
